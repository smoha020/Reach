{"version":3,"sources":["Components/Home.js","Actions/Authenticated.js","Components/LogIn.js","Components/Register.js","Actions/Posts.js","Components/Nav.js","Components/btnStyle.js","Components/Profile.js","Components/ModalNewPost.js","Components/ModalPic.js","Components/SinglePost.js","Components/ModalSinglePost.js","Components/ModalUpdateProfile.js","Components/DisplayPosts.js","Components/CurrentUser.js","Components/LoadSpinner.js","Components/User.js","Components/Test.js","Components/Dashboard.js","App.js","Components/MyTest.js","serviceWorker.js","Reducers/DataReducer.js","Reducers/AuthenticateReducer.js","Reducers/rootReducer.js","index.js"],"names":["Home","Fragment","className","to","style","textDecoration","Component","getcurrentUserSuccess","currentUser","type","payload","getcurrentUserFailure","error","getAuthenticated","dispatch","console","log","axios","get","then","res","catch","err","signIn","user","post","LogIn","props","onChange","e","setState","target","name","value","onSubmit","preventDefault","email","state","password","this","display","loading","credentials","history","push","TextField","id","label","connect","Authenticate","Register","newUser","username","registerUser","loginUser","getPost","postId","getPostSuccess","getPostFailure","Nav","notesDisplay","allPosts","notesColor","visible","handleShow","handleShow2","logOut","param","changeNotes","noteCount","notifications","map","note","index","myPost","find","_id","notType","key","variant","onClick","sender","Badge","color","badgeContent","length","fontSize","btnStyle","background","border","cursor","padding","Profile","nameCheck","handleShow4","handleShow3","pic","src","alt","margin","fontWeight","location","bio","website","ReactTimeAgo","date","joinDate","locale","Button","ModalNewPost","show","handleClose","body","Modal","onHide","Header","closeButton","Title","Body","width","Footer","ModalPic","show4","handleClose4","onSubmitPic","onChangePic","SinglePost","comment","submitComment","newComment","addComment","deleteComment","posts","displayComments","deletedisplay","data","comments","bind","createdAt","placeholder","height","justifyContent","alignItems","CircularProgress","Data","put","ModalSinglePost","show2","handleClose2","ModalUpdateProfile","show3","handleClose3","onSubmitProfile","DisplayPosts","thumbsLogo","deletePost","likes","disabled","clickLike","clickUnlike","like","includes","likeCount","commentCount","CurrentUser","displayposts","match","LoadSpinner","User","getOtherUser","params","userPosts","otherUser","loadingPost","getOtherUserSuccess","Test","Dashboard","read","NoteRead","newpost","createPost","setTimeout","likePost","unlikePost","files","fd","FormData","append","window","reload","signOut","notes","getPosts","path","render","component","getPostsSuccess","getPostsFailure","logOutFailure","delete","deletePostSuccess","likePostSuccess","likePostFailure","unlikePostSuccess","updateUser","getNoteReadSuccess","App","exact","Boolean","hostname","initState","DataReducer","action","filter","findIndex","index2","index1","AuthenticateReducer","newLikes","filterNotes","rootReducer","combineReducers","TimeAgo","addDefaultLocale","en","addLocale","ru","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.143e3aea.chunk.js","sourcesContent":["import React, { Component }from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass Home extends Component {\r\n\r\n  render () {\r\n    return (\r\n      <React.Fragment>\r\n        <div className='home-container'>\r\n          <div className='home-left'>\r\n            <div className='home-left-mid'>\r\n              <div>Be heard</div>\r\n              <div>Be seen</div>\r\n              <div>Connect with others</div>\r\n            </div>\r\n          </div>\r\n          <div className='home-right'>\r\n            <div className='home-right-top'>\r\n              <p>Welcome to Reach</p>\r\n            </div>\r\n            <div className='home-right-mid'>\r\n              <Link to='/Register' style={{ textDecoration: 'none'}}>\r\n                <div className='home-right-mid-btn'>\r\n                  Sign Up\r\n                </div>\r\n              </Link>\r\n              <Link to='/LogIn' style={{ textDecoration: 'none'}}>\r\n                <div className='home-right-mid-btn'>\r\n                  Log In\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer>\r\n          <p>smoha020@ucr.edu</p>\r\n        </footer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Home;","import axios from 'axios'\r\n\r\nexport const loadingRequest = () => {\r\n    return {\r\n        type: 'LOADING_REQUEST'\r\n    }\r\n}\r\n \r\nexport const getcurrentUserSuccess = currentUser => {\r\n    return {\r\n        type: 'GET_CURRENTUSER_SUCCESS',\r\n        payload: currentUser\r\n    }\r\n}\r\n\r\nexport const getcurrentUserFailure = error => {\r\n    return {\r\n        type: 'GET_CURRENTUSER_FAILURE',\r\n        payload: error\r\n    }\r\n} \r\n\r\nexport const getupdatedUserSuccess = credentials => {\r\n    return {\r\n        type: 'GET_UPDATEDUSER_SUCCESS',\r\n        payload: credentials\r\n    }\r\n}\r\n\r\nexport const getupdatedUserFailure = error => {\r\n    return {\r\n        type: 'GET_UPDATEDUSER_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const logOutSuccess = () => {\r\n    return {\r\n        type: 'LOG_OUT_SUCCESS',\r\n    }\r\n}\r\n\r\nexport const logOutFailure = error => {\r\n    return {\r\n        type: 'LOG_OUT_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const getNoteReadSuccess = (note) => {\r\n    return {\r\n        type: 'GET_NOTEREAD_SUCCESS',\r\n        payload: note\r\n    }   \r\n}\r\n\r\n//----\r\nconst getAuthenticatedRequest = () => {\r\n    return {\r\n        type: 'GET_AUTHENTICATED_REQUEST'\r\n    }\r\n}\r\n\r\nconst getAuthenticatedSuccess = isAuthenticated => {\r\n    return {\r\n        type: 'GET_AUTHENTICATED_SUCCESS',\r\n        payload: isAuthenticated\r\n    }\r\n}\r\n\r\nconst getAuthenticatedFailure = error => {\r\n    return {\r\n        type: 'GET_AUTHENTICATED_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n\r\n\r\n//----methods?\r\nexport const getAuthenticated = () => {\r\n    return (dispatch) => {\r\n        dispatch(loadingRequest())\r\n        console.log('loading being set for getAuth')\r\n        axios.get('/api/test')\r\n        .then(res => {\r\n            const currentUser = res;\r\n            dispatch(getcurrentUserSuccess(currentUser))\r\n            console.log('loading no longer set for getAuth')\r\n        })\r\n        .catch(err => {\r\n            const error = err;\r\n            dispatch(getcurrentUserFailure(error))\r\n        })\r\n    }\r\n}\r\n \r\nexport const signIn = (user) => {\r\n    return (dispatch) => {\r\n        dispatch(loadingRequest())\r\n        axios.post('/api/users/login', user)\r\n        .then(res => {\r\n            console.log(res)\r\n            const currentUser = res;\r\n            dispatch(getcurrentUserSuccess(currentUser))\r\n        })\r\n        .catch((err) => {\r\n            const error = err;\r\n            dispatch(getcurrentUserFailure(error))\r\n            /*axios.get('/api/test')\r\n            .then(res => {\r\n                console.log(res)\r\n                const isAuthenticated = res;\r\n                dispatch(getcurrentUserSuccess(isAuthenticated))\r\n            })\r\n            .catch(err => {\r\n                const error = err;\r\n                dispatch(getcurrentUserFailure(error))\r\n            })*/\r\n            \r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    \r\n    return (dispatch) => {\r\n        dispatch(loadingRequest())\r\n        axios.get('/api/users/logout')\r\n        .then((res) => {\r\n            \r\n            dispatch(logOutSuccess()) \r\n        })\r\n        .catch(err => {\r\n            const error = err;\r\n            dispatch(logOutFailure(error))\r\n        })\r\n    }\r\n}\r\n\r\nexport const registerUser = (user) => {\r\n    return (dispatch) => {\r\n        dispatch(loadingRequest())\r\n        axios.post('/api/users/register', user)\r\n        .then(res => {\r\n            console.log(res)\r\n            \r\n            let currentUser = res\r\n            let loginUser = {\r\n                email: user.email,\r\n                password: user.password\r\n            } \r\n            dispatch(signIn(loginUser))\r\n            //dispatch(getcurrentUserSuccess(currentUser))\r\n        })\r\n        .catch((err) => {\r\n            const error = err;\r\n            dispatch(getcurrentUserFailure(error))\r\n            \r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(loadingRequest())\r\n        axios.post(`/api/users/update/${user._id}`, user)\r\n        .then(res => {\r\n            console.log(res)\r\n            \r\n            dispatch(getcurrentUserSuccess(res))\r\n        })\r\n        .catch((err) => {\r\n            const error = err;\r\n            dispatch(getcurrentUserFailure(error))\r\n            \r\n        })\r\n    }\r\n}\r\n\r\nexport const NoteRead = (note) => {\r\n    return (dispatch) => {\r\n\r\n    axios.put(`/api/social/notificationRead/${note._id}`)\r\n        .then(data => {\r\n            \r\n            dispatch(getNoteReadSuccess(note))\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n    }\r\n}","import React, { Component }from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { signIn } from '../Actions/Authenticated'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass LogIn extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n    }\r\n \r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const user = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        console.log('b4 signIn')\r\n        if(user.email && user.password) {\r\n            this.props.signIn(user)\r\n        }\r\n         \r\n    }\r\n    render () {\r\n        console.log(this.props) \r\n        const { currentUser, loading } = this.props\r\n\r\n        let display\r\n \r\n\r\n        if(!loading){\r\n            if(currentUser && currentUser.credentials) {\r\n                this.props.history.push('/Dashboard/CurrentUser')\r\n            } else {\r\n                display = <React.Fragment>\r\n                    <div className='my-nav'>\r\n                        <Link to=\"/\"><div className='link-div'>Home</div></Link>\r\n                        <Link to=\"/Register\"><div className='link-div'>Sign Up</div></Link>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className=\"container\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"register-form\">\r\n                                <div className='register-form-child'>\r\n                                    <TextField className=\"register-text-input\" \r\n                                    id=\"standard-basic\" \r\n                                    label=\"email\" \r\n                                    type=\"email\" \r\n                                    name=\"email\" \r\n                                    value={this.state.email}\r\n                                    onChange={this.onChange}/>\r\n                                </div>\r\n                                <div className='register-form-child'>\r\n                                    <TextField className=\"register-text-input\" \r\n                                    id=\"standard-basic\" \r\n                                    label=\"password\"  \r\n                                    type=\"password\" \r\n                                    name=\"password\" \r\n                                    value={this.state.password}\r\n                                    onChange={this.onChange}/>\r\n                                </div>\r\n                                <div className='register-form-child'>\r\n                                    <input className=\"register-submit\"\r\n                                    type=\"submit\" \r\n                                    value=\"Sign In\"/>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </ React.Fragment>\r\n            }\r\n        }\r\n        \r\n\r\n        return (\r\n            <React.Fragment>{display}</React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.Authenticate.loading,\r\n        currentUser: state.Authenticate.currentUser\r\n    }\r\n}\r\n  \r\n  \r\nconst mapDispatchToProps = dispatch => {\r\n\r\n    return {\r\n        signIn: (user) => dispatch(signIn(user))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);\r\n","import React, { Component }from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { registerUser } from '../Actions/Authenticated'\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props) \r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        let newUser = {\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        if(newUser && newUser.username && newUser.email && newUser.password){\r\n            this.props.registerUser(newUser)\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    render () {\r\n\r\n        console.log(this.props) \r\n        const { currentUser, loading } = this.props\r\n\r\n        let display\r\n\r\n        if(!loading){\r\n\r\n            if(currentUser && currentUser.credentials) {\r\n                display = <div>Loading...</div> \r\n                this.props.history.push('/Dashboard/CurrentUser')\r\n            } else {\r\n                display = \r\n                <React.Fragment>\r\n                    <div className='my-nav'>\r\n                        <Link to=\"/\"><div className='link-div'>Home</div></Link>\r\n                        <Link to=\"/LogIn\"><div className='link-div'>Log In</div></Link>\r\n                    </div>\r\n                    <br></br>\r\n                    <div>\r\n                    <br></br>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className='register-form'>\r\n                                <div className='register-form-child'>\r\n                                    <TextField className=\"register-text-input\" \r\n                                    id=\"standard-basic\" \r\n                                    label=\"name\" \r\n                                    type=\"username\" \r\n                                    name=\"username\" \r\n                                    value={this.state.username}\r\n                                    onChange={this.onChange}/>\r\n                                </div>\r\n                                <div className='register-form-child'>\r\n                                    <TextField className=\"register-text-input\" \r\n                                    id=\"standard-basic\" \r\n                                    label=\"email\" \r\n                                    type=\"email\" \r\n                                    name=\"email\" \r\n                                    value={this.state.email}\r\n                                    /*value=\"<%= (function(){ return email})() %>\"*/\r\n                                    onChange={this.onChange}/>\r\n                                </div>\r\n                                <div className='register-form-child'> \r\n                                    <TextField className=\"register-text-input\" \r\n                                    id=\"standard-basic\" \r\n                                    label=\"password\" \r\n                                    type=\"password\" \r\n                                    name=\"password\" \r\n                                    value={this.state.password}\r\n                                    /*value=\"<%= (function(){ return password})() %>\"*/\r\n                                    onChange={this.onChange}/>\r\n                                </div>\r\n                                <div className='register-form-child'> \r\n                                    <input className=\"register-submit\"\r\n                                    type=\"submit\" \r\n                                    value=\"Register\"/>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </React.Fragment>\r\n            }\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>{display}</React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.Authenticate.loading,\r\n        currentUser: state.Authenticate.currentUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        registerUser: (user) => dispatch(registerUser(user))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)","import axios from 'axios'\r\nimport { loadingRequest, getcurrentUserSuccess, getcurrentUserFailure } from './Authenticated'\r\n\r\nconst loadingPost = () => {\r\n    return {\r\n        type: 'LOADING_POST'\r\n    }\r\n}\r\n//GET POSTS\r\nconst getPostsSuccess = posts => {\r\n    return {\r\n        type: 'GET_POSTS_SUCCESS',\r\n        payload: posts\r\n    }\r\n}\r\n\r\nconst getPostsFailure = error => {\r\n    return {\r\n        type: 'GET_POSTS_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n\r\n\r\n//CREATE POST\r\nconst createPostSuccess = post => {\r\n    return {\r\n        type: 'CREATE_POST_SUCCESS',\r\n        payload: post\r\n    }\r\n}\r\n\r\nconst createPostFailure = error => {\r\n    return {\r\n        type: 'CREATE_POST_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n\r\n\r\n//DELETE POST\r\nconst deletePostSuccess = (post) => {\r\n    return {\r\n        type: 'DELETE_POST_SUCCESS',\r\n        payload: post\r\n    }\r\n}\r\n\r\nconst deletePostFailure = error => {\r\n    return {\r\n        type: 'DELETE_POST_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n\r\n//GET POST\r\nconst getPostSuccess = post => {\r\n    return {\r\n        type: 'GET_POST_SUCCESS',\r\n        payload: post\r\n    }\r\n}\r\n\r\nconst getPostFailure = error => {\r\n    return {\r\n        type: 'GET_POST_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n\r\n//ADD COMMENT\r\nconst addCommentSuccess = comment => {\r\n    return {\r\n        type: 'ADD_COMMENT_SUCCESS',\r\n        payload: comment\r\n    }\r\n}\r\n\r\nconst addCommentFailure = error => {\r\n    return {\r\n        type: 'ADD_COMMENT_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n\r\n//LIKE AND UNLIKE POST\r\nconst likePostSuccess = (like) => {\r\n    return {\r\n        type: 'LIKE_POST_SUCCESS',\r\n        payload: like\r\n    }\r\n}\r\n\r\nconst likePostFailure = (error) => {\r\n    return {\r\n        type: 'LIKE_POST_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst unlikePostSuccess = (like) => {\r\n    return {\r\n        type: 'UNLIKE_POST_SUCCESS',\r\n        payload: like\r\n    }\r\n}\r\n\r\n\r\nconst getOtherUserSuccess = (user) => {\r\n    return {\r\n        type: 'GET_OTHER_USER_SUCCESS',\r\n        payload: user\r\n    }\r\n}\r\n\r\nconst getOtherUserFailure = (error) => {\r\n    return {\r\n        type: 'GET_OTHER_USER_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n//-----------------------------\r\n\r\n\r\n//GET POSTS\r\nexport const getPosts = () => {\r\n    return (dispatch) => {\r\n        axios.get('/api/social/posts')\r\n        .then(res => {\r\n\r\n            let listPosts = res.data.map(post => {\r\n                return post\r\n            })\r\n            const posts = listPosts;\r\n            console.log(posts)\r\n            //console.log(posts)\r\n            dispatch(getPostsSuccess(posts))\r\n        })\r\n        .catch(err => {\r\n            const error = err;\r\n            dispatch(getPostsFailure(error))\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//CREATE POST\r\nexport const createPost = (newpost) => {\r\n    return (dispatch) => {\r\n        axios.post('/api/social/posts/create', newpost)\r\n        .then(res => {\r\n\r\n            dispatch(createPostSuccess(res))\r\n        })\r\n        .catch(err => {\r\n            dispatch(createPostFailure(err))\r\n        })\r\n    }\r\n}\r\n\r\n//DELETE POST \r\nexport const deletePost = (post) => {\r\n    return (dispatch) => {\r\n        axios.delete(`/api/social/posts/${post._id}`)\r\n        .then(res => {\r\n            dispatch(deletePostSuccess(post))\r\n            \r\n        })\r\n        .catch(err => {\r\n            dispatch(deletePostFailure(err))\r\n        })\r\n    }\r\n}\r\n  \r\n//GET POST\r\nexport const getPost = (postId) => {\r\n    return (dispatch) => {\r\n        //dispatch(loadingPost())\r\n        axios.get(`/api/social/posts/single/${postId}`)\r\n        .then(res => {\r\n\r\n            const post = res;\r\n            //console.log(posts)\r\n            dispatch(getPostSuccess(post))\r\n        })\r\n        .catch(err => {\r\n            const error = err;\r\n            dispatch(getPostFailure(error))\r\n        })\r\n    }\r\n}\r\n  \r\nexport const addComment = (newComment) => {\r\n    return (dispatch) => {\r\n        //dispatch(loadingPost())\r\n        axios.post(`/api/social/posts/createcomment/${newComment.postId}`, newComment)\r\n        .then(res => {\r\n\r\n            console.log(res.data)\r\n            //dispatch(getPost(newComment.postId))\r\n            //dispatch(getPosts())\r\n            dispatch(addCommentSuccess(res.data))\r\n        })\r\n        .catch(err => {\r\n            const error = err;\r\n            //dispatch(addCommentFailure(error))\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteComment = (comment) => {\r\n    return (dispatch) => {\r\n        dispatch(loadingPost())\r\n        console.log('before the put ')\r\n        axios.put(`/api/social/posts/deletecomment/${comment.postId}`, comment)\r\n        .then(() => {\r\n\r\n            dispatch(getPost(comment.postId))\r\n            //dispatch(getPosts())\r\n            //dispatch(addCommentSuccess(res))\r\n        })\r\n        .catch(err => {\r\n            const error = err;\r\n            //dispatch(addCommentFailure(error))\r\n        })\r\n    }\r\n}\r\n\r\nexport const likePost = (like) => {\r\n    return (dispatch) => {\r\n        axios.post(`/api/social/like/${like.postId}`, like)\r\n        .then(() => {\r\n            console.log('likePost is called')\r\n            //dispatch(getPosts())\r\n            dispatch(likePostSuccess(like))\r\n            \r\n        })\r\n        .catch(err => {\r\n            const error = err;\r\n            dispatch(likePostFailure(err))\r\n            //dispatch(addCommentFailure(error))\r\n        })\r\n    }\r\n}\r\n\r\nexport const unlikePost = (like) => {\r\n    return (dispatch) => {\r\n        //dispatch(loadingPost())\r\n        //console.log('before the put ')\r\n        axios.post(`/api/social/unlike/${like.postId}`, like)\r\n        .then(() => {\r\n            console.log('unLikePost is called')\r\n            \r\n            dispatch(unlikePostSuccess(like))\r\n        })\r\n        .catch(err => {\r\n            const error = err;\r\n            \r\n        })\r\n    }\r\n}\r\n\r\n//GET OTHER USER\r\nexport const getOtherUser = (user) => {\r\n    return (dispatch) => {\r\n        //dispatch(loadingPost())\r\n        //console.log('before the put ')\r\n        axios.get(`/api/users/otheruser/${user}`)\r\n        .then((res) => {\r\n            \r\n            dispatch(getOtherUserSuccess(res.data))\r\n        })\r\n        .catch(err => {\r\n            dispatch(getOtherUserFailure(err))\r\n        })\r\n    }\r\n}\r\n\r\n//CREATE COMMENT (UPDATE POST)\r\n/*export const createComment = (link, newcomment) => {\r\n    return (dispatch) => {\r\n        axios.put(link, newcomment)\r\n        .then(res =>  res)\r\n        .catch(err => err)\r\n    }\r\n}*/\r\n","import React, { Component } from 'react'\r\nimport Badge from '@material-ui/core/Badge';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\n\r\n\r\nfunction Nav(props) {\r\n\r\n    console.log(props)\r\n    const { currentUser, allPosts, notesColor, visible, \r\n            handleShow, handleShow2, logOut, param, changeNotes } = props\r\n\r\n    console.log(props)\r\n    /*We use this to get the number in the red \r\n    circle on the notifications*/\r\n    let notesDisplay\r\n    let noteCount = []\r\n    notesDisplay = currentUser.notifications.map((note, index) => {\r\n        let myPost = allPosts.find( post => {\r\n            return (post._id === note.postId) \r\n        })\r\n        \r\n        if(myPost) {\r\n            noteCount = [...noteCount, myPost]\r\n            console.log('myPost is not undefined: ' + noteCount)\r\n            if(note.notType === 'like') { \r\n\r\n                return <div key={index} variant=\"primary\" onClick={() => {handleShow2(myPost, note)}}>{note.sender} liked your post </div>\r\n            } else {\r\n                return <div key={index} variant=\"primary\" onClick={() => {handleShow2(myPost, note)}}>{note.sender} commented on your post </div>\r\n            }\r\n        } else return null\r\n    })\r\n\r\n    return (\r\n        <div className='my-nav'>\r\n            <div className='brand-name'>Reach</div>\r\n            <div className='move-right'>   \r\n                <div className='notes-display'>\r\n                    <Badge className='notes-icon' color=\"secondary\" badgeContent={(noteCount.length != 0)?(noteCount.length):(0)}>\r\n                        <NotificationsIcon  style={{ fontSize: 30, color: `${notesColor}` }} onClick={changeNotes}></NotificationsIcon>\r\n                    </Badge>\r\n                    {(visible)? (\r\n                        <div className='notes-menu'>\r\n                            {notesDisplay}\r\n                        </div>): (null)}\r\n                </div>\r\n                {(param === currentUser.credentials.username || param === 'CurrentUser' )? (\r\n                        <PostAddIcon className='post-icon' style={{ fontSize: 30 }} onClick={handleShow}>\r\n                        </PostAddIcon>\r\n                    ): (\r\n                        <Link style={{ textDecoration: 'none'}} to={'/Dashboard/CurrentUser'}>\r\n                            <HomeIcon className='post-icon' style={{ fontSize: 30 }}></HomeIcon>\r\n                        </Link>\r\n                    )}\r\n                <div onClick={logOut} className='log-out'>Log Out</div>    \r\n            </div>   \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Nav","const btnStyle = () => {\r\n    return{\r\n        background: '#2196f3', \r\n        color: 'white', \r\n        border: 'none', \r\n        cursor: 'pointer', \r\n        padding: '3%'\r\n    }\r\n}\r\n\r\nexport default btnStyle","import React from 'react'\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\nimport ReactTimeAgo from 'react-time-ago'\r\nimport Button from 'react-bootstrap/Button';\r\nimport btnStyle from './btnStyle'\r\n\r\n\r\nfunction Profile(props) {\r\n\r\n    const { user, nameCheck, handleShow4, handleShow3 } = props\r\n\r\n    \r\n    return (\r\n        <div className=\"profile\">\r\n            <div className='profile-pic'>\r\n                {(user.pic)? (\r\n                    <img src={`data:image/png;base64,${user.pic}`} alt='jpg'/>\r\n                ): (<div className='profile-pic-second'></div>)}\r\n                {(user.credentials.username === nameCheck )? (\r\n                    <div className='profile-pic-btn' style={{margin: '1%'}}>\r\n                        <PhotoIcon style={{ fontSize: 30, color: '#2196f3', cursor: 'pointer'}} onClick={handleShow4}>\r\n                        </PhotoIcon>\r\n                    </div>\r\n                ): (null)}\r\n            </div>\r\n            <div className='profile-details'>\r\n                <p style={{ fontWeight: 'bold', fontSize: 'x-large'}}>{user.credentials.username}</p>\r\n                {(user.credentials.location)? (<p>From: {user.credentials.location}</p>): (null)}\r\n                {(user.credentials.bio)? (<p>About: {user.credentials.bio}</p>): (null)}\r\n                {(user.credentials.website)? (<p>{user.credentials.website}</p>): (null)}\r\n                <p>Joined: <ReactTimeAgo date={user.credentials.joinDate} locale=\"en-US\"/></p>\r\n                {(user.credentials.username === nameCheck )?(<Button variant=\"primary\" onClick={handleShow3}>Update Profile</Button>):(null)}\r\n            </div>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport btnStyle from './btnStyle'\r\n\r\n\r\nfunction ModalNewPost(props) {\r\n\r\n    const { show, handleClose, onSubmit, body, onChange } = props\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <form onSubmit={onSubmit}> \r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>New Post</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body style={{width: '100%'}}>\r\n                    <textarea\r\n                    type='text'\r\n                    name=\"body\"\r\n                    value={body}\r\n                    style={{ background: 'rgb(230, 234, 247)', width: '90%'}}\r\n                    onChange={(e) => {onChange(e)}} />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <p\r\n                    style={btnStyle()} \r\n                    onClick={handleClose}>\r\n                        Close\r\n                    </p>\r\n                    <input \r\n                    style={btnStyle()} \r\n                    type=\"submit\" \r\n                    value=\"post\"/>\r\n                </Modal.Footer>\r\n            </form>\r\n        </Modal>\r\n    )   \r\n}\r\n\r\nexport default ModalNewPost","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport btnStyle from './btnStyle'\r\n\r\n\r\nfunction ModalPic(props) {\r\n\r\n    const { show4, handleClose4, onSubmitPic, onChangePic } = props\r\n\r\n    return (\r\n        <Modal show={show4} onHide={handleClose4}>\r\n            <form onSubmit={(e) => {onSubmitPic(e)}}> \r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Update Pic</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <label>\r\n                        <input \r\n                        type='file'\r\n                        onChange={(e) => {onChangePic(e)}} />\r\n                    </label>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <p \r\n                    style={btnStyle()} \r\n                    onClick={handleClose4}>\r\n                        Close\r\n                    </p>\r\n                    <input \r\n                    style={btnStyle()}\r\n                    type=\"submit\" \r\n                    value=\"update\"/>\r\n                </Modal.Footer>\r\n            </form>\r\n        </Modal>\r\n    )   \r\n}\r\n\r\nexport default ModalPic","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'; \r\nimport { Link } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ReactTimeAgo from 'react-time-ago'\r\nimport axios from 'axios'\r\nimport { getPost, addComment, deleteComment } from '../Actions/Posts'\r\n\r\n\r\nclass SinglePost extends Component {\r\n    constructor(props) {\r\n        super(props) \r\n        this.state = {\r\n            //currentUser: '',\r\n            posts: [],\r\n            post: '',\r\n            comment: '',\r\n            loading: '' \r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        console.log(this.state.comment)\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    submitComment = (e)=> {\r\n    \r\n        e.preventDefault();\r\n\r\n        if(this.state.comment != '') {\r\n            console.log('not blank')\r\n            let newComment = {\r\n                body: this.state.comment,\r\n                user: this.props.currentUser.credentials.username,\r\n                postId: this.props.postId\r\n            }\r\n\r\n            console.log(newComment)\r\n            this.props.addComment(newComment)\r\n            this.setState({ comment: '' })\r\n        }\r\n    }\r\n \r\n    componentDidMount(){\r\n        console.log('didMount')\r\n        this.props.getPost(this.props.postId)\r\n    }\r\n \r\n \r\n    deleteComment = (comment) => {\r\n\r\n        console.log(comment)\r\n        \r\n        this.props.deleteComment(comment)\r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n    \r\n        console.log(this.props)\r\n        //console.log(this.props.post + ' and ' + this.state.loading)\r\n        const { post, currentUser, postId } = this.props\r\n\r\n        let display \r\n        let displayComments \r\n        let deletedisplay \r\n\r\n        /*\r\n        When the post is clicked after closing another post:\r\n        1st rendering loadingPost is false so the ...loading div \r\n        doesn't show up.\r\n        2nd rendering is after the componentDidMount calls getPost \r\n        and loadingPost is set to 'true' while post is being fetched. \r\n        Therefore, we see the ...loading div while it is fetching.\r\n        3rd rendering happens when the new post is recieved hence the \r\n        new post is displayed.\r\n        */\r\n        if( !post ) {\r\n            console.log('first round')\r\n            display = \r\n            <div style={{ \r\n                height: '40vh',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center'}}\r\n            > \r\n                <CircularProgress />\r\n            </div>\r\n        } else {\r\n\r\n\r\n            /*don't display previously opened post \r\n            during the first render */\r\n            if(post.data._id === postId) {\r\n\r\n                displayComments = post.data.comments.map(comment => {\r\n\r\n\r\n                    if(comment.user == currentUser.credentials.username) {\r\n                        deletedisplay = <button onClick={this.deleteComment.bind(this, comment)} >\r\n                                    x\r\n                                </button>\r\n                    } else deletedisplay = ''\r\n\r\n\r\n                    return (\r\n                        <div className='comment' key={comment._id} >\r\n                            <div className='comment-pic'>\r\n                                {(comment.pic)? (\r\n                                    <img src={`data:image/png;base64,${comment.pic}`} alt='jpg'></img>\r\n                                    ): (<div className='comment-pic-second'></div>)}\r\n                            </div>\r\n                            <div className='comment-right'>\r\n                                <div className='comment-right-top'>\r\n                                    <div className='comment-name'><Link style={{ textDecoration: 'none'}} to={`/Dashboard/User/${comment.user}`} style={{ fontWeight: 'bold'}}>{comment.user}</Link></div>\r\n                                    <div className='comment-time'><ReactTimeAgo date={comment.createdAt} locale=\"en-US\"/></div>\r\n                                    <div className='comment-delete'>{deletedisplay}</div>\r\n                                </div>\r\n                                <div className='comment-body'>{comment.body} </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    )\r\n                \r\n                })\r\n\r\n                display = \r\n                    <div>\r\n                        <div className='post'>\r\n                            <div className='post-pic'>\r\n                                {(post.data.pic)? (\r\n                                    <img src={`data:image/png;base64,${post.data.pic}`} alt='jpg'/>\r\n                                ): (<div className='post-pic-second'></div>)}\r\n                            </div>\r\n                            <div className='post-right'>\r\n                                <div className='post-right-top'>\r\n                                    <div className='post-name'><Link style={{ textDecoration: 'none'}} to={`/Dashboard/User/${post.data.user}`} style={{ fontWeight: 'bold'}}>{post.data.user}</Link></div>\r\n                                    <div className='post-time'><ReactTimeAgo date={post.data.createdAt} locale=\"en-US\"/></div>\r\n                                </div>\r\n                                <div className='post-body'>{post.data.body}</div>\r\n                            </div>\r\n                        </div>          \r\n                        <br></br>    \r\n                        {displayComments}\r\n                        <br></br>   \r\n                        <br></br> \r\n                        <div className='input-container'>\r\n                            <form onSubmit={this.submitComment}> \r\n                                <div className='text-cont'>\r\n                                    <input \r\n                                    className='input-text'\r\n                                    type='text'\r\n                                    name=\"comment\"\r\n                                    value={this.state.comment}\r\n                                    placeholder=\"write a comment\"\r\n                                    onChange={this.onChange} />\r\n                                </div>\r\n                                <div className='submit-cont'>\r\n                                    <input \r\n                                    className='input-submit'\r\n                                    type=\"submit\" \r\n                                    value=\"submit\"\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n            } else {\r\n                display = \r\n                <div style={{ \r\n                    height: '40vh',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center'}}\r\n                > \r\n                    <CircularProgress />\r\n                </div>\r\n            }\r\n            \r\n    \r\n        }\r\n        \r\n  \r\n        return (\r\n            <React.Fragment>\r\n                {display}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n\r\n    return {\r\n        post: state.Data.post,\r\n        currentUser: state.Authenticate.currentUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getPost: (postId) => dispatch(getPost(postId)),\r\n        addComment: (newComment) => dispatch(addComment(newComment)),\r\n        deleteComment: (comment) => dispatch(deleteComment(comment))\r\n    }\r\n}\r\n\r\nconst btnStyle = {\r\n    background: '#2196f3', \r\n    color: 'white', \r\n    border: 'none', \r\n    cursor: 'pointer', \r\n    padding: '3%'\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost)","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport SinglePost from './SinglePost'\r\n\r\n\r\nfunction ModalSinglePost(props) {\r\n\r\n    const { show2, handleClose2, postId } = props\r\n\r\n    console.log(props)\r\n    return (\r\n        <Modal show={show2} onHide={handleClose2}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Post</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <SinglePost postId={postId}/>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )   \r\n}\r\n\r\nexport default ModalSinglePost","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport btnStyle from './btnStyle'\r\n\r\n\r\nfunction ModalUpdateProfile(props) {\r\n\r\n    const { show3, handleClose3, onSubmitProfile,\r\n            onChange, username, bio, location, website,\r\n     } = props\r\n\r\n    return (\r\n        <Modal show={show3} onHide={handleClose3}>\r\n            <form onSubmit={onSubmitProfile}> \r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Update My Profile</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body style={{width: '100%'}}>\r\n                    <label>\r\n                        <input type='text'\r\n                        name=\"username\"\r\n                        value={username}\r\n                        placeholder=\"username\"\r\n                        style={{ background: 'rgb(230, 234, 247)', width: '90%'}}\r\n                        onChange={(e) => {onChange(e)}} />\r\n                    </label>\r\n                    <label>\r\n                        <input type='text'\r\n                        name=\"bio\"\r\n                        value={bio}\r\n                        placeholder=\"bio\"\r\n                        style={{ background: 'rgb(230, 234, 247)', width: '90%'}}\r\n                        onChange={(e) => {onChange(e)}} />\r\n                    </label>\r\n                    <label>\r\n                        <input type='text'\r\n                        name=\"location\"\r\n                        value={location}\r\n                        placeholder=\"location\"\r\n                        style={{ background: 'rgb(230, 234, 247)', width: '90%'}}\r\n                        onChange={(e) => {onChange(e)}} />\r\n                    </label>\r\n                    <label>\r\n                        <input type='text'\r\n                        name=\"website\"\r\n                        value={website}\r\n                        placeholder=\"website\"\r\n                        style={{ background: 'rgb(230, 234, 247)', width: '90%'}}\r\n                        onChange={(e) => {onChange(e)}} />\r\n                    </label>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <p\r\n                    style={btnStyle()}\r\n                    onClick={handleClose3}>\r\n                        Close\r\n                    </p>\r\n                    <input \r\n                    style={btnStyle()}\r\n                    type=\"submit\" value=\"update\"/>\r\n                </Modal.Footer>\r\n            </form>\r\n        </Modal>\r\n    )   \r\n}\r\n\r\n\r\nexport default ModalUpdateProfile","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport ReactTimeAgo from 'react-time-ago'\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\n\r\nfunction DisplayPosts(props) {\r\n\r\n    const { posts, currentUser, deletePost, likes, \r\n            disabled, clickLike, clickUnlike, handleShow2 } = props\r\n\r\n\r\n    let displayposts, deletedisplay, thumbsLogo\r\n\r\n\r\n    displayposts  = posts.map((post, index) => {\r\n        if(post.user == currentUser.credentials.username) {\r\n            deletedisplay = <button onClick={() => {deletePost(post)}}>\r\n                        Delete\r\n                    </button>\r\n        } else { deletedisplay = '' }\r\n        /*WITHTOUT THIS, deletedisplay WILL CONTINUE TO HAVE THE \r\n        VALUE ABOVE FOR EVERY ITERATION AFTER THE FIRST TRUE IF STATEMENT.*/\r\n\r\n        thumbsLogo = []\r\n        thumbsLogo = likes.map(like => {\r\n            if(like.postId === post._id) {\r\n                return post._id\r\n            } \r\n        })\r\n\r\n        \r\n        return (\r\n            <React.Fragment key={index}>\r\n                <div className='post'>\r\n                    <div className='post-pic'>\r\n                        {(post.pic)? (\r\n                            <Link style={{ textDecoration: 'none'}} to={`/Dashboard/User/${post.user}`}>\r\n                                <img src={`data:image/png;base64,${post.pic}`} alt='jpg'/>\r\n                            </Link>\r\n                        ): (<div className='post-pic-second'></div>)}\r\n                    </div>\r\n                    <div className='post-right'>\r\n                        <div className='post-right-top'>\r\n                            <div className='post-name'><Link style={{ textDecoration: 'none'}} to={`/Dashboard/User/${post.user}`} style={{ fontWeight: 'bold'}}>{post.user}</Link></div>\r\n                            <div className='post-time'><ReactTimeAgo date={post.createdAt} locale=\"en-US\"/></div>\r\n                            <div className='post-delete'>{deletedisplay}</div>\r\n                        </div>\r\n                        <div className='post-body'>{post.body}</div>\r\n                        <div className='post-bottom'>\r\n                            <div className='bottom-thumb'>\r\n                                {( thumbsLogo.includes(post._id) )? (\r\n                                    <button disabled={disabled} onClick={() => {clickUnlike(post._id)}}><ThumbDownIcon style={{ fontSize: 20, color: '#2196f3', cursor: 'pointer'}}></ThumbDownIcon></button>\r\n                                ) : (\r\n                                    <button disabled={disabled} onClick={() => {clickLike(post._id)}}><ThumbUpIcon style={{ fontSize: 20, color: '#2196f3', cursor: 'pointer'}}></ThumbUpIcon></button>\r\n                                )} \r\n                                <div>{post.likeCount}</div>\r\n                            </div>\r\n                            <div className='bottom-comment'>\r\n                                <div><CommentIcon style={{ fontSize: 20, color: '#2196f3', cursor: 'pointer'}} onClick={() => {handleShow2(post)}}></CommentIcon></div>\r\n                                <div>{post.commentCount}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </React.Fragment>\r\n        )   \r\n    })\r\n\r\n    return displayposts \r\n    \r\n}\r\n\r\nexport default DisplayPosts","import React from 'react'\r\nimport Nav from './Nav'\r\nimport Profile from './Profile'\r\nimport ModalNewPost from './ModalNewPost'\r\nimport ModalPic from './ModalPic'\r\nimport ModalSinglePost from './ModalSinglePost'\r\nimport ModalUpdateProfile from './ModalUpdateProfile'\r\nimport DisplayPosts from './DisplayPosts'\r\n\r\n\r\n\r\nfunction CurrentUser(props){\r\n\r\n    const { currentUser, posts, body, notesColor, visible, deletePost, likes, disabled, clickLike, \r\n            clickUnlike, handleShow, handleShow2, show, handleClose, onSubmit, show2, \r\n            handleClose2, postId, show3, handleClose3, onSubmitProfile, onChange, \r\n            username, bio, location, website, show4, handleClose4, onSubmitPic, \r\n            onChangePic, handleShow4, handleShow3, match, changeNotes, logOut } = props\r\n\r\n    console.log(props)\r\n    let displayposts\r\n    let param = 'CurrentUser'\r\n    displayposts = \r\n        <DisplayPosts posts={posts} currentUser={currentUser} deletePost={deletePost} \r\n        likes={likes} disabled={disabled} clickLike={clickLike} \r\n        clickUnlike={clickUnlike} handleShow2={handleShow2} />\r\n\r\n    let nameCheck = currentUser.credentials.username\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ModalNewPost show={show} handleClose={handleClose}\r\n            onSubmit={onSubmit} body={body} onChange={onChange} />\r\n\r\n            <ModalSinglePost show2={show2} handleClose2={handleClose2}\r\n            postId={postId} />\r\n\r\n            <ModalUpdateProfile show3={show3} handleClose3={handleClose3}\r\n            onSubmitProfile={onSubmitProfile} onChange={onChange}\r\n            username={username} bio={bio} location={location}\r\n            website={website} />\r\n            \r\n            <ModalPic show4={show4} handleClose4={handleClose4}\r\n            onSubmitPic={onSubmitPic} onChangePic={onChangePic} />\r\n\r\n            <Nav currentUser={currentUser} allPosts={posts} notesColor={notesColor} \r\n            visible={visible} handleShow={handleShow} param={param}\r\n            handleShow2={handleShow2} logOut={logOut} changeNotes={changeNotes} />\r\n\r\n            <div className='display-flex'>\r\n                <Profile user={currentUser} nameCheck={nameCheck} handleShow4={handleShow4}\r\n                handleShow3={handleShow3} />\r\n                <div className='post-container'>\r\n                    {displayposts}\r\n                </div>\r\n            </div>\r\n        </ React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CurrentUser","import React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nfunction LoadSpinner() {\r\n    \r\n    return (\r\n        <div style={{ \r\n            height: '100vh',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <CircularProgress/>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default LoadSpinner","import React, { Component }from 'react';\r\nimport Nav from './Nav'\r\nimport Profile from './Profile'\r\nimport ModalNewPost from './ModalNewPost'\r\nimport ModalPic from './ModalPic'\r\nimport ModalSinglePost from './ModalSinglePost'\r\nimport LoadSpinner from './LoadSpinner'\r\nimport ModalUpdateProfile from './ModalUpdateProfile'\r\nimport DisplayPosts from './DisplayPosts'\r\nimport { connect } from 'react-redux';\r\nimport { getOtherUser } from '../Actions/Posts'\r\n\r\nclass User extends Component {\r\n\r\n    componentDidMount(){\r\n        console.log('componentDidMount User')\r\n        this.props.getOtherUser(this.props.match.params.user)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { otherUser, currentUser, posts, body, notesColor, visible, deletePost, likes, disabled, clickLike, \r\n            clickUnlike, handleShow, handleShow2, show, handleClose, onSubmit, show2, \r\n            handleClose2, postId, show3, handleClose3, onSubmitProfile, onChange, \r\n            username, bio, location, website, show4, handleClose4, onSubmitPic, \r\n            onChangePic, handleShow4, handleShow3, match, changeNotes, logOut} = this.props\r\n\r\n        let userPosts\r\n        let displayposts\r\n        let param = match.params.user\r\n\r\n\r\n        //for initial rendering while call in componentDidMount is firing\r\n        if(otherUser) {\r\n\r\n            /*Previous user will be displayed before the \r\n            finel rendering, this prevents that*/\r\n            if(param === otherUser.credentials.username) {\r\n                let nameCheck = currentUser.credentials.username\r\n                console.log(nameCheck)\r\n                userPosts = otherUser.posts\r\n                console.log(this.props)\r\n                displayposts = \r\n                    <DisplayPosts posts={userPosts} currentUser={currentUser} deletePost={deletePost} \r\n                    likes={likes} disabled={disabled} clickLike={clickLike} \r\n                    clickUnlike={clickUnlike} handleShow2={handleShow2} />\r\n\r\n                return (\r\n                    <React.Fragment>\r\n                        <ModalNewPost show={show} handleClose={handleClose}\r\n                        onSubmit={onSubmit} body={body} onChange={onChange} />\r\n\r\n                        <ModalSinglePost show2={show2} handleClose2={handleClose2}\r\n                        postId={postId} />\r\n\r\n                        {/* ----WE CAN ONLY UPDATE PROFILE AND \r\n                                PIC IF THE USER IS CURRENTUSER ------ */ }\r\n\r\n                        {(nameCheck === otherUser.credentials.username)? (\r\n                            <React.Fragment>\r\n                                <ModalUpdateProfile show3={show3} handleClose3={handleClose3}\r\n                                onSubmitProfile={onSubmitProfile} onChange={onChange}\r\n                                username={username} bio={bio} location={location}\r\n                                website={website} />\r\n                                \r\n                                <ModalPic show4={show4} handleClose4={handleClose4}\r\n                                onSubmitPic={onSubmitPic} onChangePic={onChangePic} />\r\n                            </React.Fragment>\r\n                        ): (null)}\r\n                        \r\n                        <Nav currentUser={currentUser} allPosts={posts} notesColor={notesColor} \r\n                        visible={visible} handleShow={handleShow} param={param}\r\n                        handleShow2={handleShow2} logOut={logOut} changeNotes={changeNotes} />\r\n\r\n                        <div className='display-flex'>\r\n                            <Profile user={otherUser} nameCheck={nameCheck} handleShow4={handleShow4}\r\n                            handleShow3={handleShow3} />\r\n                            <div className='post-container'>\r\n                                {displayposts}\r\n                            </div>\r\n                        </div>\r\n                    </ React.Fragment>\r\n                )\r\n            } else {\r\n                return (\r\n                    <loadingPost />\r\n                )\r\n            }\r\n        } else {\r\n            return <LoadSpinner />\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        otherUser: state.Data.otherUser,\r\n        //currentUser: state.Authenticate.currentUser,\r\n        //likes: state.Authenticate.likes,\r\n        loadingPost: state.Data.loadingPost,\r\n        //allPosts: state.Data.posts,\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\r\n    return {\r\n        getOtherUser: (user) => dispatch(getOtherUser(user))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User);","import React from 'react'\r\n\r\n\r\n\r\nfunction Test(props){ \r\n\r\n    console.log('Test')\r\n    return <h1>TEST PAGE</h1>\r\n}\r\n\r\nexport default Test ","import React, { Component }from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport { getPosts, createPost, deletePost, likePost, unlikePost } from '../Actions/Posts'\r\nimport { signOut, updateUser, getAuthenticated, NoteRead } from '../Actions/Authenticated'\r\nimport { connect } from 'react-redux';\r\nimport CurrentUser from './CurrentUser'\r\nimport User from './User'\r\nimport Test from './Test'\r\nimport DisplayPosts from './DisplayPosts'\r\nimport Nav from './Nav'\r\nimport Profile from './Profile'\r\nimport ModalNewPost from './ModalNewPost'\r\nimport ModalPic from './ModalPic'\r\nimport ModalSinglePost from './ModalSinglePost'\r\nimport ModalUpdateProfile from './ModalUpdateProfile'\r\nimport LoadSpinner from './LoadSpinner'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ReactTimeAgo from 'react-time-ago'\r\n\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props) \r\n        this.state = {\r\n            posts: [],\r\n            body: '',\r\n            comment: '',\r\n            show: false,\r\n            show2: false,\r\n            show3: false,\r\n            show4: false,\r\n            postId: '',\r\n            disabled: false,\r\n            pic: '',\r\n            username: '',\r\n            bio: '',\r\n            location: '',\r\n            website: '',\r\n            notes: 'notes',\r\n            visible: false,\r\n            notesColor: 'white'\r\n        };\r\n    }\r\n\r\n    handleShow = ()=> {\r\n        this.setState({show: true});\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({show: false});\r\n    }\r\n    handleShow2 = (post, note)=> {\r\n        console.log(post)\r\n        /*Once the notification is clicked, \r\n        it will display the modal for the post*/\r\n        this.setState({\r\n            show2: true, \r\n            postId: post._id\r\n        })\r\n\r\n        if(note && note.read === false) {\r\n            this.props.NoteRead(note)\r\n        }\r\n        \r\n    }\r\n\r\n    handleClose2 = () => {\r\n\r\n        //If modal was opened for notifications\r\n        if(this.state.visible == true) {\r\n            this.setState({show2: false});\r\n            console.log('refresh?')\r\n            //this.props.history.push('/Dashboard')\r\n            //window.location.reload()\r\n        } else {\r\n            this.setState({show2: false});\r\n            console.log('inside handleClose2')\r\n            //this.props.getPosts()\r\n        }\r\n    }\r\n\r\n    handleShow3 = ()=> {\r\n        this.setState({show3: true});\r\n    }\r\n\r\n    handleClose3 = () => {\r\n        this.setState({show3: false});\r\n    }\r\n    handleShow4 = ()=> {\r\n        this.setState({show4: true});\r\n    }\r\n\r\n    handleClose4 = () => {\r\n        this.setState({show4: false});\r\n    }\r\n \r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n    //MAKE A POST \r\n    onSubmit = (e) => {\r\n        //this.setState({show: false});\r\n        e.preventDefault()\r\n        \r\n        if(this.state.body) {\r\n            let newpost = {\r\n                body: this.state.body,\r\n                user: this.props.currentUser.credentials.username,\r\n            }\r\n\r\n            this.props.createPost(newpost)\r\n            this.setState({ show: false })\r\n        }\r\n    }\r\n\r\n    clickLike = ( id ) => {\r\n        \r\n        this.setState({ disabled: true })\r\n        \r\n        setTimeout(() => { \r\n            this.setState({ disabled: false })\r\n        }, 2500) \r\n        \r\n        console.log(id)\r\n        let like = {\r\n            postId: id,\r\n            user: this.props.currentUser.credentials.username\r\n        }\r\n        this.props.likePost(like)\r\n    }\r\n\r\n    clickUnlike = ( id ) => {\r\n\r\n        this.setState({ disabled: true })\r\n        \r\n        setTimeout(() => {\r\n            this.setState({ disabled: false })\r\n        }, 2500) \r\n        \r\n        let like = {\r\n            postId: id,\r\n            user: this.props.currentUser.credentials.username\r\n        }\r\n        this.props.unlikePost(like)\r\n    }\r\n\r\n    onSubmitProfile = (e) => {\r\n        e.preventDefault()\r\n\r\n        if( this.state.bio || this.state.location || this.state.website ) {\r\n            let user = {\r\n                _id: this.props.currentUser.credentials._id,\r\n                bio: this.state.bio,\r\n                location: this.state.location,\r\n                website: this.state.website\r\n            }\r\n            axios.post(`/users/update/${user._id}`, user)\r\n            .then(res => {\r\n                this.props.getAuthenticated()\r\n                this.setState({ show3: false })\r\n            })\r\n            .catch((err) => {\r\n                const error = err;  \r\n            })\r\n        }\r\n    }\r\n\r\n    onChangePic = (e) => {\r\n        this.setState({\r\n            pic: e.target.files[0]\r\n        })\r\n    }\r\n\r\n    onSubmitPic = (e) => {\r\n        e.preventDefault()\r\n        const fd = new FormData();\r\n        fd.append('pic', this.state.pic, this.state.pic.name)\r\n        axios.post('/users/uploadImage', fd)\r\n        .then( data => {\r\n            window.location.reload()\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    deletePost = (post) => {\r\n        this.props.deletePost(post)\r\n    }\r\n    \r\n    logOut = () => { \r\n        this.props.signOut()\r\n    }\r\n\r\n    changeNotes = () => {\r\n\r\n        if(this.state.visible) {\r\n            this.setState({ \r\n                visible: false, \r\n                notesColor: 'white'\r\n            })\r\n        } else {\r\n            this.setState({ \r\n                visible: true,\r\n                notesColor: '#0d47a1'\r\n            })\r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n        if(this.props.posts.length === 0) {\r\n            console.log('componentDidMount: ' + this.props.posts.length)\r\n            this.props.getPosts()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { currentUser, posts, loading, likes } = this.props\r\n        console.log(this.props)\r\n    \r\n\r\n        let display;\r\n        let displayposts\r\n    \r\n        /*WHEN YOU COME TO THIS PAGE VIA URL OR WHEN YOU REFRESH, \r\n        THE INITIAL RENDERING TAKES PLACE AND isAuthenticated is '', \r\n        AFTER THIS IT RE-RENDERS AND isAuthenticated GETS THE data PROPERTY*/\r\n        if(loading) {\r\n            console.log('dash loading')\r\n            return (\r\n                <LoadSpinner />\r\n            ) \r\n        } else {\r\n            if(currentUser && currentUser.credentials != '') {\r\n                if(posts.length != 0) {\r\n                    return (\r\n                        <Router>\r\n                            <Route path='/Dashboard/CurrentUser' render={props => ( <CurrentUser\r\n                                {...props}\r\n                                currentUser={currentUser} posts={posts} notesColor={this.state.notesColor} \r\n                                visible={this.state.visible} handleShow={this.handleShow} body={this.state.body} \r\n                                deletePost={this.deletePost} logOut={this.logOut} changeNotes={this.changeNotes}\r\n                                likes={likes} disabled={this.state.disabled} clickLike={this.clickLike} \r\n                                clickUnlike={this.clickUnlike} handleShow2={this.handleShow2} \r\n                                show={this.state.show} handleClose={this.handleClose}\r\n                                onSubmit={this.onSubmit} show2={this.state.show2} handleClose2={this.handleClose2}\r\n                                postId={this.state.postId} show3={this.state.show3} handleClose3={this.handleClose3}\r\n                                onSubmitProfile={this.onSubmitProfile} onChange={this.onChange}\r\n                                username={this.state.username} bio={this.state.bio} location={this.state.location}\r\n                                website={this.state.website} show4={this.state.show4} handleClose4={this.handleClose4}\r\n                                onSubmitPic={this.onSubmitPic} onChangePic={this.onChangePic} handleShow4={this.handleShow4}\r\n                                handleShow3={this.handleShow3} />) }/> \r\n                            \r\n                            <Route path='/Dashboard/User/:user' render={props => ( <User\r\n                                {...props}\r\n                                currentUser={currentUser} posts={posts} body={this.state.body} notesColor={this.state.notesColor} \r\n                                visible={this.state.visible} handleShow={this.handleShow} \r\n                                deletePost={this.deletePost} logOut={this.logOut} changeNotes={this.changeNotes} \r\n                                likes={likes} disabled={this.state.disabled} \r\n                                clickLike={this.clickLike} clickUnlike={this.clickUnlike} \r\n                                handleShow2={this.handleShow2} show={this.state.show} handleClose={this.handleClose}\r\n                                onSubmit={this.onSubmit} show2={this.state.show2} handleClose2={this.handleClose2}\r\n                                postId={this.state.postId} show3={this.state.show3} handleClose3={this.handleClose3}\r\n                                onSubmitProfile={this.onSubmitProfile} onChange={this.onChange}\r\n                                username={this.state.username} bio={this.state.bio} location={this.state.location}\r\n                                website={this.state.website} show4={this.state.show4} handleClose4={this.handleClose4}\r\n                                onSubmitPic={this.onSubmitPic} onChangePic={this.onChangePic} handleShow4={this.handleShow4}\r\n                                handleShow3={this.handleShow3} />) }/>\r\n                            \r\n                            <Route path='/Dashboard/Test' component={Test}/>\r\n                        </Router>\r\n                    )\r\n                } else {\r\n                    display = \r\n                    <LoadSpinner />\r\n                }\r\n            } else {\r\n                this.props.history.push('/LogIn')\r\n            }\r\n        }\r\n    \r\n        return (\r\n            <div>{display}</div>\r\n        )\r\n    }\r\n} \r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentUser: state.Authenticate.currentUser,\r\n        likes: state.Authenticate.likes,\r\n        posts: state.Data.posts,\r\n        loading: state.Authenticate.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getPosts: () => dispatch(getPosts()),\r\n        createPost: (post) => dispatch(createPost(post)),\r\n        signOut: () => dispatch(signOut()),\r\n        deletePost: (post) => dispatch(deletePost(post)),\r\n        likePost: (like) => dispatch(likePost(like)),\r\n        unlikePost: (like) => dispatch(unlikePost(like)),\r\n        updateUser: (user) => dispatch(updateUser(user)),\r\n        getAuthenticated: () => dispatch(getAuthenticated()),\r\n        NoteRead: (note) => dispatch(NoteRead(note))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from './Components/Home'\nimport LogIn from './Components/LogIn'\nimport Register from './Components/Register'\nimport Dashboard from './Components/Dashboard' \nimport User from './Components/User' \nimport axios from 'axios'\nimport { connect } from 'react-redux';\nimport { getAuthenticated } from './Actions/Authenticated'\n\nimport MyTest from './Components/MyTest'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n\n  componentDidMount() {\n    console.log('componentDidMount')\n    this.props.getAuthenticated()\n  }\n\n\n  /*changeAccess = (update) => {\n    console.log(update)\n    this.setState({isAuthenticated: update})\n  }*/\n\n  render () {\n    //const { isAuthenticated, getAuthenticated } = this.props\n    console.log(this.props)\n    return (\n      <Router>\n        <Route exact path='/' component={Home}/> \n        <Route path='/logIn' component={LogIn}/>\n        <Route path='/Register' component={Register}/> \n        <Route path='/Dashboard' component={Dashboard}/>\n      </Router>\n    );\n  }\n   \n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.Authenticate.currentUser\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n\n  return {\n    getAuthenticated: () => dispatch(getAuthenticated())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React, { Component }from 'react';\r\n\r\nclass MyTest extends Component {\r\n\r\n    render () {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div>MYTEST MYTEST MYTEST</div>\r\n            </ React.Fragment>\r\n        ); \r\n    } \r\n}\r\n\r\nexport default MyTest; ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    otherUser: '',\r\n    posts: [],\r\n    post: '',\r\n    error: '',\r\n    comment: '',\r\n    loadingPost: true\r\n}\r\n\r\nconst DataReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'LOADING_POST':\r\n            return {\r\n                ...state,\r\n                loadingPost: true\r\n            }\r\n        case 'GET_POSTS_SUCCESS': \r\n            return {\r\n                posts: [...action.payload],\r\n                error: ''\r\n            }\r\n        case 'GET_POSTS_FAILURE': \r\n            return {\r\n                posts: [],\r\n                error: action.payload\r\n            }\r\n        case 'CREATE_POST_SUCCESS': \r\n            return {\r\n                posts: [action.payload.data, ...state.posts],\r\n                error: ''\r\n            }\r\n        case 'CREATE_POST_FAILURE': \r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case 'GET_POST_SUCCESS': \r\n            return {\r\n                ...state,\r\n                //loadingPost: false,\r\n                post: action.payload,\r\n                error: ''\r\n            }\r\n        case 'GET_POST_FAILURE': \r\n            return {\r\n                ...state,\r\n                //loadingPost: false,\r\n                post: '',\r\n                error: action.payload\r\n            }\r\n        case 'DELETE_POST_SUCCESS': \r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter( post => post != action.payload),\r\n                //in case we delete from User component\r\n                otherUser: (state.otherUser)?( { \r\n                    ...state.otherUser,\r\n                    posts: state.otherUser.posts.filter( post => post != action.payload)\r\n                }): (''),\r\n                error: ''\r\n            }\r\n        case 'DELETE_POST_FAILURE': \r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case 'ADD_COMMENT_SUCCESS': \r\n            //state.post.data.comments = [...state.post.data.comments, action.payload]\r\n            let index = state.posts.findIndex(post => post._id === action.payload.postId)\r\n            state.posts[index].commentCount ++\r\n            console.log('inside add comment reducer')\r\n            return {\r\n                ...state,\r\n                //loadingPost: false, \r\n                post: {\r\n                    ...state.post,\r\n                   data: {\r\n                       ...state.post.data,\r\n                       comments: [action.payload, ...state.post.data.comments]\r\n                    }\r\n                }\r\n            }\r\n        case 'ADD_COMMENT_FAILURE': \r\n            return {\r\n                ...state,\r\n                loadingPost: false, \r\n                error: action.payload\r\n            }\r\n        case 'LIKE_POST_SUCCESS': \r\n            let index2 = state.posts.findIndex(post => post._id === action.payload.postId)\r\n            state.posts[index2].likeCount ++\r\n            /*let updatedPost = state.posts[index2]\r\n            updatedPost.likeCount = updatedPost.likeCount + 1\r\n            state.posts[index2] = updatedPost*/\r\n            return {\r\n                ...state\r\n            }\r\n        case 'UNLIKE_POST_SUCCESS': \r\n        let index1 = state.posts.findIndex(post => post._id === action.payload.postId)\r\n        state.posts[index1].likeCount--\r\n            return {\r\n                ...state\r\n            }\r\n        case 'GET_OTHER_USER_SUCCESS': \r\n            return {\r\n                ...state,\r\n                loadingPost: false,\r\n                otherUser: action.payload\r\n            }\r\n        case 'GET_OTHER_USER_FAILURE': \r\n            return {\r\n                ...state,\r\n                loadingPost: false,\r\n                error: action.payload\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default DataReducer","const initState = {\r\n    loading: true,\r\n    currentUser: '',\r\n    notifications: '',\r\n    likes: '',\r\n    error: ''\r\n}\r\n\r\nconst AuthenticateReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'LOADING_REQUEST': \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case 'GET_CURRENTUSER_SUCCESS': \r\n            return {\r\n                loading: false,\r\n                currentUser: action.payload.data,\r\n                likes: [...action.payload.data.likes],\r\n                error: ''\r\n            }\r\n        case 'GET_CURRENTUSER_FAILURE': \r\n            return {\r\n                loading: false,\r\n                currentUser: '',\r\n                likes: '',\r\n                error: action.payload\r\n            }\r\n        case 'LIKE_POST_SUCCESS': \r\n            return {\r\n                ...state,\r\n                likes: [...state.likes, action.payload],\r\n                loading: false,\r\n            }\r\n        case 'UNLIKE_POST_SUCCESS': \r\n\r\n        let newLikes = state.likes.filter(like => like.postId != action.payload.postId)\r\n        console.log(newLikes)\r\n            return {\r\n                ...state,\r\n                likes: [...newLikes],\r\n                loading: false,\r\n            }\r\n        case 'LIKE_POST_FAILURE': \r\n            return {\r\n                ...state,\r\n                likes: '',\r\n                loading: false,\r\n            }\r\n        case 'GET_UPDATEDUSER_SUCCESS': \r\n            return {\r\n                ...state, \r\n                loading: false, \r\n                currentUser: action.payload.data, \r\n                error: '' \r\n            }\r\n        case 'GET_UPDATEDUSER_FAILURE': \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                currentUser: '',\r\n                error: action.payload\r\n            }\r\n        case 'LOG_OUT_SUCCESS': \r\n            return {\r\n                loading: false,\r\n                //When we submit a post, dashboard is refreshed\r\n                currentUser: '',\r\n                notifications: '',\r\n                likes: '',\r\n                error: ''\r\n            }\r\n        case 'LOG_OUT_FAILURE': \r\n            return {\r\n                loading: false,\r\n                currentUser: '',\r\n                notifications: '',\r\n                likes: '',\r\n                error: action.payload\r\n            }\r\n        case 'GET_NOTEREAD_SUCCESS': \r\n        let filterNotes = state.currentUser.notifications.filter(note => note._id != action.payload._id)\r\n            return {\r\n                ...state,\r\n                currentUser: {\r\n                    ...state.currentUser,\r\n                    notifications: [...filterNotes]\r\n                }\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default AuthenticateReducer","import { combineReducers } from 'redux'\r\nimport DataReducer from './DataReducer'\r\nimport AuthenticateReducer from './AuthenticateReducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    Data: DataReducer,\r\n    Authenticate: AuthenticateReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux'\nimport rootReducer from './Reducers/rootReducer'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\n//----TIME AGO----\nimport TimeAgo from 'javascript-time-ago'\n \nimport en from 'javascript-time-ago/locale/en'\nimport ru from 'javascript-time-ago/locale/ru'\n \nTimeAgo.addDefaultLocale(en)\nTimeAgo.addLocale(ru)\n\nconst store = createStore(rootReducer, \n  composeWithDevTools(applyMiddleware(thunk)));\n//-----------\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}